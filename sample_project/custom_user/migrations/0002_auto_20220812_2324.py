# Generated by Django 4.0.6 on 2022-08-12 23:24

from django.db import migrations

def create_rules(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    mfa_required = Group.objects.create(**{
        "name": "MFA Required",
    })

    LoginRule = apps.get_model('workos_login', 'LoginRule')
    LoginRule.objects.create(**{
        "name": "Google SSO",
        "method": "GoogleOAuth",
        "jit_creation": True,
        "priority": 97,
        "email_regex": r".*@gmail\.com",
        "jit_attributes": {
            "is_staff": False,
            "profile": {
                "organization_name": "Google"
            }
        },
    })
    LoginRule.objects.create(**{
        "name": "MFA Required",
        "lookup_attributes": {
            "groups__in": [
                mfa_required.pk
            ]
        },
        "totp_organization_name": "Django Workos Test",
        "method": "mfa",
        "jit_creation": False,
        "priority": 99,
    })
    LoginRule.objects.create(**{
        "name": "Microsoft SSO",
        "totp_organization_name": "",
        "method": "MicrosoftOAuth",
        "jit_creation": True,
        "priority": 101,
        "email_regex": r"^.+@outlook\.com$",
    })
    LoginRule.objects.create(**{
        "name": "Magic Email",
        "totp_organization_name": "",
        "method": "magic",
        "priority": 450,
        "email_regex": r"^.*@example\.com$",
    })

    LoginRule.objects.create(
        name="Okta SSO",
        method="sso",
        priority=300,
        organization_id="Update to your Org ID",
        email_regex=r"^.*@foo-corp\.com$"  # Match test credentials
    )

    User = apps.get_model('custom_user', 'User')
    User.objects.create(**{
        "password": "pbkdf2_sha256$320000$f2Ctb2fOK64Caf4LwVkjWJ$BnZF+iu3g/8LduT1Vo1bgf7npw4l4pZAKx266tqAAKY=",
        "is_superuser": True,
        "username": "magic",
        "first_name": "Magic",
        "last_name": "Example",
        "email": "magic@example.com",
        "is_staff": True,
        "is_active": True,
        "date_joined": "2022-08-12T23:39:35Z",
        "is_external": False,
    })

    mfa_user = User.objects.create(**{
        "password": "pbkdf2_sha256$320000$nOnTxiDacwD0FJi31rDpxH$HT7N5lMOfmPsaaqWsQpEMDGDFqnKlGh+KZQPa+yq5YM=",
        "is_superuser": True,
        "username": "mfa",
        "first_name": "MFA",
        "last_name": "Example",
        "email": "mfa@example.com",
        "is_staff": True,
        "is_active": True,
        "date_joined": "2022-08-12T23:38:33Z",
        "is_external": False,
    })

    mfa_user.groups.add(mfa_required)

    User.objects.create(**{
        "password": "pbkdf2_sha256$320000$29mKqOBa4mpnkM1m5IhrCJ$5fwVWQRdqVa7a0Ufp6wweW9Z+ShXLeJxL67j9cGs75c=",
        "is_superuser": True,
        "username": "admin",
        "first_name": "Basic",
        "last_name": "Example",
        "email": "admin@basic.local",
        "is_staff": True,
        "is_active": True,
        "date_joined": "2022-08-12T23:45:06Z",
        "is_external": False,
    })

class Migration(migrations.Migration):

    dependencies = [
        ('custom_user', '0001_initial'),
        ('workos_login', '0002_auto_20220803_2242'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.RunPython(create_rules),
    ]
